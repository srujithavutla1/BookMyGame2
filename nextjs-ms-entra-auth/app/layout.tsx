import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "@/app/components/navbar";
import { AuthProvider } from "./context/AuthContext";
import { cookies } from 'next/headers';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function checkPasswordStatus() {
  try {
    const cookieStore = cookies();
    const cookieString = (await cookieStore).getAll()
      .map(cookie => `${cookie.name}=${cookie.value}`)
      .join('; ');

    const response = await fetch('http://localhost:3001/auth/has-password', {
      headers: {
        Cookie: cookieString,
      },
      credentials: 'include',
    });

    if (!response.ok) {
      return false;
    }

    const { hasPassword } = await response.json();
    return hasPassword;
  } catch (error) {
    console.error('Error checking password status:', error);
    return false;
  }
}

export default async function Layout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const hasPassword = await checkPasswordStatus();

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <AuthProvider>
          {hasPassword && <Navbar />}
          <main className="p-5">
            {children}
          </main>
        </AuthProvider>
      </body>
    </html>
  );
}